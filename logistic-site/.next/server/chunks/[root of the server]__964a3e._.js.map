{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mshre/OneDrive/Desktop/Shreyas%20M/Start-Up/TRL%20Logistics/logistic-site/src/app/api/logistics/route.js"],"sourcesContent":["import { connectToDatabase } from \"@/lib/mongodb\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\nexport default async function handler(req, res) {\r\n  const { method } = req;\r\n\r\n  const { db } = await connectToDatabase();\r\n\r\n  if (method === \"POST\") {\r\n    // Place an order\r\n    const { customerName, address, phone } = req.body;\r\n\r\n    if (!customerName || !address || !phone) {\r\n      return res.status(400).json({ message: \"All fields are required.\" });\r\n    }\r\n\r\n    const orderId = new ObjectId().toString().slice(-6); // Generate a short unique order ID\r\n    const newOrder = {\r\n      orderId,\r\n      customerName,\r\n      address,\r\n      phone,\r\n      shipmentStatus: \"Pending\", // Default status\r\n      createdAt: new Date(),\r\n    };\r\n\r\n    await db.collection(\"orders\").insertOne(newOrder);\r\n    return res.status(201).json({ message: \"Order placed successfully!\", orderId });\r\n  } else if (method === \"GET\") {\r\n    // Track an order\r\n    const { orderId } = req.query;\r\n\r\n    if (!orderId) {\r\n      return res.status(400).json({ message: \"Order ID is required.\" });\r\n    }\r\n\r\n    const order = await db.collection(\"orders\").findOne({ orderId });\r\n\r\n    if (!order) {\r\n      return res.status(404).json({ message: \"Order not found.\" });\r\n    }\r\n\r\n    return res.status(200).json(order);\r\n  } else {\r\n    return res.status(405).json({ message: \"Method not allowed.\" });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AACA;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI,WAAW,QAAQ;QACrB,iBAAiB;QACjB,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,IAAI;QAEjD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO;YACvC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAA2B;QACpE;QAEA,MAAM,UAAU,IAAI,uGAAA,CAAA,WAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,IAAI,mCAAmC;QACxF,MAAM,WAAW;YACf;YACA;YACA;YACA;YACA,gBAAgB;YAChB,WAAW,IAAI;QACjB;QAEA,MAAM,GAAG,UAAU,CAAC,UAAU,SAAS,CAAC;QACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAA8B;QAAQ;IAC/E,OAAO,IAAI,WAAW,OAAO;QAC3B,iBAAiB;QACjB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,KAAK;QAE7B,IAAI,CAAC,SAAS;YACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAwB;QACjE;QAEA,MAAM,QAAQ,MAAM,GAAG,UAAU,CAAC,UAAU,OAAO,CAAC;YAAE;QAAQ;QAE9D,IAAI,CAAC,OAAO;YACV,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAmB;QAC5D;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAC9B,OAAO;QACL,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAsB;IAC/D;AACF"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}